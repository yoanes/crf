<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

<!--
    <bean id="crf.resourceResolverEngine" 
        class="au.com.sensis.mobile.crf.service.CachedResourceResolverEngineBean">
        <constructor-arg ref="crf.resourceResolverEngine"/>
        <constructor-arg value="@{crf.env.cache.resources}"/>
    </bean>
-->    

    <bean id="crf.resourceResolverEngine" 
        class="au.com.sensis.mobile.crf.service.ResourceResolverEngineBean">
        <constructor-arg ref="crf.resourceResolver"/>
        <constructor-arg ref="crf.resourceResolutionWarnLogger"/>
    </bean>                
        
    <bean id="crf.resourcePatternResolver" class="org.springframework.web.context.support.ServletContextResourcePatternResolver">
        <constructor-arg>
            <bean class="org.springframework.web.context.support.ServletContextFactoryBean"/>
        </constructor-arg>
    </bean>
    
    <bean id="crf.resourceResolver" class="au.com.sensis.mobile.crf.service.DelegatingResourceResolverBean">
        <constructor-arg>
            <list>
                <bean class="au.com.sensis.mobile.crf.service.JspResourceResolverBean">
                    <constructor-arg ref="crf.commonResourceResolverParams" />
                    <constructor-arg value="@{crf.resources.jsp.abstract.path.extension}"/>
                    <constructor-arg value="@{crf.env.resources.jsp.root.dir}"/>
                    <constructor-arg value="@{crf.resources.jsp.root.servlet.path}"/>
                </bean>
                <bean class="au.com.sensis.mobile.crf.service.CssResourceResolverBean">
                	<constructor-arg ref="crf.commonResourceResolverParams" />
                    <constructor-arg value="@{crf.resources.css.abstract.path.extension}"/>
                    <constructor-arg value="@{crf.env.resources.css.root.dir}"/>
                    <constructor-arg ref="crf.resourceAccumulatorFactory" />                    
                </bean>

<!--
  - Use this instead of TransformedImageResourceResolverBean if you don't want/need image 
  - transformation. 
  -->
<!--                 
                <bean class="au.com.sensis.mobile.crf.service.ImageResourceResolverBean">
                	<constructor-arg ref="crf.commonResourceResolverParams" />
                    <constructor-arg value="@{crf.resources.image.abstract.path.extension}"/>
                    <constructor-arg value="@{crf.env.resources.images.root.dir}"/>
                    <constructor-arg>
                        <list>
                            <value>*</value>
                        </list>
                    </constructor-arg>
                </bean>
-->                

                <bean class="au.com.sensis.mobile.crf.service.TransformedImageResourceResolverBean">
                    <constructor-arg ref="crf.commonResourceResolverParams" />
                    <constructor-arg value="@{crf.resources.image.abstract.path.extension}"/>
                    <constructor-arg value="@{crf.env.resources.images.root.dir}"/>
                    <constructor-arg>
                        <list>
                            <value>*</value>
                        </list>
                    </constructor-arg>
                    <property name="propertiesLoader">
                        <bean class="au.com.sensis.mobile.crf.util.PropertiesLoaderBean"/>                    
                    </property>
                    <property name="imageTransformationFactory"
                        ref="crf.imageTransformationFactory"  />
                </bean>
                
                <bean class="au.com.sensis.mobile.crf.service.JavaScriptResourceResolverBean">
                	<constructor-arg ref="crf.commonResourceResolverParams" />
                    <constructor-arg value="@{crf.resources.javascript.abstract.path.extension}"/>
                    <constructor-arg value="@{crf.env.resources.javascript.root.dir}"/>
                    <constructor-arg ref="crf.resourceAccumulatorFactory" />
                    <constructor-arg value="@{crf.resources.javascript.abstract.path.package.keyword}" />
                    <constructor-arg>
                        <bean class="au.com.sensis.mobile.crf.service.JavaScriptFileFinderBean">
                            <constructor-arg>
                                <bean class="au.com.sensis.mobile.crf.util.PropertiesLoaderBean"/>
                            </constructor-arg>
                            <constructor-arg value="@{crf.resources.javascript.package.properties.name}"/>
                            <constructor-arg value="@{crf.resources.javascript.package.order.property.name}"/>
                        </bean>
                    </constructor-arg>
                </bean>
                <bean class="au.com.sensis.mobile.crf.service.PropertiesResourceResolverBean">
                	<constructor-arg ref="crf.commonResourceResolverParams" />
                    <constructor-arg value="@{crf.resources.properties.abstract.path.extension}"/>
                    <constructor-arg value="@{crf.env.resources.properties.root.dir}"/>
                    <constructor-arg ref="crf.resourceAccumulatorFactory" />
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="crf.propertiesLoader" 
        class="au.com.sensis.mobile.crf.service.PropertiesLoaderBean">
        <constructor-arg ref="crf.resourceResolverEngine" />
    </bean>
    
    <bean id="crf.linkTagDependencies" 
        class="au.com.sensis.mobile.crf.presentation.tag.LinkTagDependencies">
        <constructor-arg ref="crf.resourceResolverEngine" />
        <constructor-arg ref="crf.deploymentMetadata" />
        <constructor-arg value="@{crf.env.resources.css.client.path.prefix}" />
        <constructor-arg ref="crf.resourceResolutionWarnLogger" />        
    </bean>
    
    <bean id="crf.imageTagDependencies" 
        class="au.com.sensis.mobile.crf.presentation.tag.ImageTagDependencies">
        <constructor-arg ref="crf.resourceResolverEngine" />
        <constructor-arg ref="crf.deploymentMetadata" />
        <constructor-arg value="@{crf.env.resources.images.client.path.prefix}" />
        <constructor-arg ref="crf.resourceResolutionWarnLogger" />        
    </bean>
    
    <bean id="crf.scriptTagDependencies" 
        class="au.com.sensis.mobile.crf.presentation.tag.ScriptTagDependencies">
        <constructor-arg ref="crf.resourceResolverEngine" />
        <constructor-arg ref="crf.deploymentMetadata" />
        <constructor-arg value="@{crf.env.resources.javascript.client.path.prefix}" />
        <constructor-arg ref="crf.resourceResolutionWarnLogger" />        
    </bean>
    
    <bean id="crf.imageServletDependencies" 
        class="au.com.sensis.mobile.crf.presentation.ImageServlet$ImageServletDependencies">
        <constructor-arg ref="crf.resourceResolverEngine" />
        <constructor-arg value="@{crf.env.resources.images.client.path.prefix}" />
    </bean>
    
    
    <bean id="crf.commonResourceResolverParams" 
        class="au.com.sensis.mobile.crf.service.ResourceResolverCommonParamHolder">
        <constructor-arg ref="crf.resourceResolutionWarnLogger" />
        <constructor-arg ref="crf.deploymentMetadata" />
        <constructor-arg ref="crf.configurationFactory" />                        
        <constructor-arg ref="crf.resourceCache"/>
    </bean>  
    
    <bean id="crf.imageTransformationFactory" class="au.com.sensis.mobile.crf.util.GraphicsMagickImageTransformationFactoryBean">
        <constructor-arg>
            <bean class="au.com.sensis.mobile.crf.util.ProcessBuilderStarterBean" />
        </constructor-arg>
        <constructor-arg>
            <bean class="au.com.sensis.mobile.crf.util.ImageReaderBean" />
        </constructor-arg>
        <constructor-arg value="@{crf.env.image.transformation.graphics.magick.path}" />
    </bean>

    <!-- TODO: extract this global deploymentMetadata bean (and its class) into somewhere more common? -->
    <bean id="crf.deploymentMetadata" class="au.com.sensis.mobile.crf.config.DeploymentMetadata">
        <constructor-arg>
            <!-- TODO: in future, the platform will be set from a properties file. For now, only DEV is supported. -->
            <util:constant static-field="au.com.sensis.mobile.crf.config.DeploymentMetadata$Platform.DEVELEOPMENT" />
        </constructor-arg>
        <constructor-arg><value>@{global.version}.@{global.build}</value></constructor-arg>
        <property name="cacheUiConfiguration" value="@{crf.env.cache.ui.configuration}" />
        <property name="downstreamCachingEnabled" value="@{crf.env.downstream.caching.enabled}" />
    </bean>
    
    <bean id="crf.resourceAccumulatorFactory" 
        class="au.com.sensis.mobile.crf.service.ResourceAccumulatorFactory">
        <constructor-arg value="@{crf.env.bundle.resources}"/>
        <constructor-arg value="@{crf.resources.javascript.abstract.path.package.keyword}" />
        <constructor-arg value="@{crf.resources.javascript.bundle.package.filename}" /> 
    </bean>
    
    <bean id="crf.configurationFactory" 
        class="au.com.sensis.mobile.crf.config.ConfigurationFactoryBean">
        <constructor-arg ref="crf.deploymentMetadata" />
        <constructor-arg ref="crf.resourcePatternResolver"/>
        <constructor-arg>
            <bean class="au.com.sensis.mobile.crf.config.UiConfigurationJaxbXmlBinder">
                <constructor-arg>
                    <bean class="au.com.sensis.wireless.common.utils.jaxb.JaxbXMLBinderImpl">
                        <constructor-arg index="0" value="au.com.sensis.mobile.crf.config.jaxb.generated"/>
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="au.com.sensis.mobile.crf.util.XsdXmlValidatorBean"/>
        </constructor-arg>
        <constructor-arg ref="crf.resourceResolutionWarnLogger" />
        <constructor-arg>
            <bean class="au.com.sensis.mobile.crf.config.ConfigurationPaths">
                <constructor-arg value="@{crf.resources.config.path.patterns}"/>
                <constructor-arg>
                    <list>
                        <value>@{crf.env.resources.jsp.root.dir}/@{crf.resources.jsp.root.servlet.path}</value>
                        <value>@{crf.env.resources.properties.root.dir}</value>
                        <value>@{crf.env.resources.css.root.dir}/@{global.version}.@{global.build}</value>
                        <value>@{crf.env.resources.javascript.root.dir}/@{global.version}.@{global.build}</value>
                        <value>@{crf.env.resources.images.root.dir}/@{global.version}.@{global.build}</value>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="au.com.sensis.mobile.crf.config.SingletonEhcacheGroupsCacheFactoryBean">
                <constructor-arg ref="crf.groupsCache" />
            </bean>
        </constructor-arg>
    </bean>
    
    <!-- ==================================================================================== -->
    <!-- Caching beans. -->
    
    <bean id="crf.groupsCache" class="au.com.sensis.mobile.crf.config.EhcacheGroupsCacheBean">
        <constructor-arg ref="crf.groupsEhcache" />
        <constructor-arg value="@{crf.env.cache.resources}" />
        <property name="enableStatistics" value="true" />
    </bean>
    
    <bean id="crf.groupsEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="crf.groupsEhcacheManager" />
        <property name="cacheName" value="groupsCache" />
    </bean>
    
    <bean id="crf.groupsEhcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/au/com/sensis/mobile/crf/config/groups-ehcache.xml" />
        <property name="cacheManagerName" value="crf.groupsEhcacheManager" />
    </bean>
    
    <bean id="crf.resourceCache" class="au.com.sensis.mobile.crf.service.EhcacheResourceCacheBean">
        <constructor-arg ref="crf.resourcesEhcache" />
        <constructor-arg value="@{crf.env.cache.resources}" />
        <property name="enableStatistics" value="true" />
        <property name="resourcesNotFoundMaxRefreshCount" 
            value="@{crf.env.cache.resources.not.found.max.refresh.count}"/>
        <property name="resourcesNotFoundRefreshCountUpdateMilliseconds" 
            value="@{crf.env.cache.resources.not.found.refresh.count.update.milliseconds}"/>
    </bean>
    
    <bean id="crf.resourcesEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="crf.resourcesEhcacheManager"/>
        <property name="cacheName" value="resourcesCache" />
    </bean> 
    
    <bean id="crf.resourcesEhcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/au/com/sensis/mobile/crf/config/resources-ehcache.xml" />
        <property name="cacheManagerName" value="crf.resourcesEhcacheManager" />
    </bean>

    <bean id="crf.groupsEhcacheManagerMBeanRegister" 
        class="net.sf.ehcache.management.ManagementService" init-method="init">
        <constructor-arg index="0" ref="crf.groupsEhcacheManager" />
        <constructor-arg index="1" ref="crf.mbeanServer" />
        <constructor-arg index="2" value="true"/>
        <constructor-arg index="3" value="true"/>
        <constructor-arg index="4" value="true"/>
        <constructor-arg index="5" value="true"/>
        <constructor-arg index="6" value="true"/>
    </bean>    
    
    <bean id="crf.resourcesEhcacheManagerMBeanRegister" 
        class="net.sf.ehcache.management.ManagementService" init-method="init">
        <constructor-arg index="0" ref="crf.resourcesEhcacheManager" />
        <constructor-arg index="1" ref="crf.mbeanServer" />
        <constructor-arg index="2" value="true"/>
        <constructor-arg index="3" value="true"/>
        <constructor-arg index="4" value="true"/>
        <constructor-arg index="5" value="true"/>
        <constructor-arg index="6" value="true"/>
    </bean>    

    <bean id="crf.mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>
    
    <!-- ==================================================================================== -->
    <!--  Debug/logging support. -->
    
    <!-- Loggers. -->
    <bean id="crf.resourceResolutionWarnLogger" class="au.com.sensis.mobile.crf.service.ResourceResolutionWarnLogger" />
    
    <bean id="crf.resourceResolverDebugFilter" class="au.com.sensis.mobile.crf.debug.ResourceResolverDebugFilter">
        <property name="enabled" value="@{crf.env.debug.resource.graph}" />
    </bean>
    
    <bean id="crf.groupsEhcacheStatsLogger" class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean">
        <property name="targetObject">
            <bean class="au.com.sensis.mobile.crf.util.EhcacheStatisticsLogger">
                <constructor-arg ref="crf.groupsEhcache" />
            </bean>
        </property>
        <property name="targetMethod" value="logStats" />
    </bean>
    
    <bean id="crf.resourcesEhcacheStatsLogger" class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean">
        <property name="targetObject">
            <bean class="au.com.sensis.mobile.crf.util.EhcacheStatisticsLogger">
                <constructor-arg ref="crf.resourcesEhcache" />
            </bean>
        </property>
        <property name="targetMethod" value="logStats" />
    </bean>
    
    <bean id="crf.timerFactoryBean" class="org.springframework.scheduling.timer.TimerFactoryBean">
        <property name="scheduledTimerTasks">
            <list>
                <bean id="crf.groupsEhcacheStatsLogger.scheduledTask" 
                    class="org.springframework.scheduling.timer.ScheduledTimerTask">
                    <!-- Run every M milliseconds. -->
                    <property name="period" value="@{crf.env.cache.stats.logging.period.milliseconds}" />
                    <property name="timerTask" ref="crf.groupsEhcacheStatsLogger" />
                </bean>
                <bean id="crf.resourcesEhcacheStatsLogger.scheduledTask" 
                    class="org.springframework.scheduling.timer.ScheduledTimerTask">
                    <!-- Run every M milliseconds. -->
                    <property name="period" value="@{crf.env.cache.stats.logging.period.milliseconds}" />
                    <property name="timerTask" ref="crf.resourcesEhcacheStatsLogger" />
                </bean>
            </list>
        </property>
    </bean>
    
    <!-- Cache fillers. -->
    <bean id="crf.groupsCacheFiller" class="au.com.sensis.mobile.crf.debug.GroupsCacheFillerBean">
        <constructor-arg ref="crf.groupsCache" />
        <property name="enabled" value="@{crf.env.cache.resources.fillers.enabled}"/>
    </bean>
    
    <bean id="crf.resourceCacheFiller" class="au.com.sensis.mobile.crf.debug.ResourceCacheFillerBean">
        <constructor-arg ref="crf.resourceCache" />
        <property name="enabled" value="@{crf.env.cache.resources.fillers.enabled}"/>
    </bean>
    
    <!-- this bean must not be lazily initialized if the exporting is to happen -->
    <bean id="crf.mbean.exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="assembler" ref="crf.jmx.assembler"/>
        <property name="namingStrategy" ref="crf.jmx.namingStrategy"/>
        <property name="beans">
            <map>
                <entry key="crf.groupsCacheFiller" value-ref="crf.groupsCacheFiller"/>
                <entry key="crf.resourceCacheFiller" value-ref="crf.resourceCacheFiller"/>
            </map>
        </property>
    </bean>    
    
    <!-- will create management interface using annotation metadata -->
    <bean id="crf.jmx.assembler"
          class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="crf.jmx.jmxAttributeSource"/>
    </bean>

    <!-- will pick up the ObjectName from the annotation -->
    <bean id="crf.jmx.namingStrategy"
          class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="crf.jmx.jmxAttributeSource"/>
    </bean>
    
    <bean id="crf.jmx.jmxAttributeSource"
      class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>
      
    </beans>
