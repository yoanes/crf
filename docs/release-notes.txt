==== (Pending) Version 0.1.3-001 (tag: contentRenderingFramework_v0_1_3-001) ==== 

Jiras:
- CRF-3: ContentRenderingPlatformConfigurationFactory - validate config
    - if one or more groups do not exist as a directory(ies) in any of the resource directory roots,
      a warning is logged using ResourceResolutionWarnLogger.
    - if a directory(ies) exist in one of the resource directory roots but no corresponding group 
      is found in any UiConfiguration, a warning is logged using ResourceResolutionWarnLogger.
      
- CRF-14: Debug page composition
    - if env.debug.resource.graph=true in crf-environment.properties, plain text graph of resolved 
      resources output as a comment directly under the html element of the output stream. 
      Also logged at DEBUG level if log4j debug is enabled. 
      
- CRF-69: Cache for Groups resolution
    - UiConfiguration.matchingGroupIterator now uses a cache.
    
- CRF-77: Caching - modify to use ehcache 
    - Caching of of the following utilises Ehcache now:
        - (String userAgent, String uiConfigurationPath) -> Group []
        - (String requestedResourcePath, Group group) -> Resource []
    - Caching of loaded groups still uses simple hold for memory caching upon loading of group
      config files (there is no need to change this due to the small memory footprint).
    - ehcache monitoring MBeans are now registered with the platform's MBeanServer. 
      If none is found, an MBeanServer will be created.
    - MBeans GroupsCacheFillerBean and ResourceCacheFillerBean are now registered with the platform 
      MBeanServer but they are only enabled if the env.cache.resources.fillers.enabled property in 
      crf-environment.properties.* is true. These MBeans allow you to fill the caches with 
      arbitrary numbers of elements. Useful for analysing memory consumption during development.   
      
- Bundling (not sure what the Jira number is because I'm not sure if the Jiras are up to date).      
          
Now depends on:
- <dependency org="apache" name="commons-io" rev="1.3" conf="default"/>      
- <dependency org="org.ehcache" name="ehcache-core" rev="2.3.0" conf="default"/>        
- <dependency org="com.yahoo" name="yuicompressor" rev="2.4.2" conf="default"/>

==== Version 0.1.2-104 (tag: contentRenderingFramework_v0_1_2-104) ==== 

Jiras:
- CRF-75: NEW - Runtime reloading of crp-config.xml appears to be broken
    - Modified src/resources/au/com/sensis/mobile/crf/crf-environment.properties.desk to
      disable caching:
      
        env.cache.ui.configuration=false
        env.cache.resources=false
      
      Removed now redundant setting of the same properties in 
      showcase/resources/crf-environment.properties.desk.

Upgrade notes:
- Should be transparent.

==== Version 0.1.2-103 (tag: contentRenderingFramework_v0_1_2-103) ==== 

Merged changes between contentRenderingFramework_v0_1_2-003 and 
contentRenderingFramework_v0_1_2-004 (from branch_contentRenderingFramework_v0_1_2-002) 
onto HEAD.

==== Version 0.1.2-102 (tag: contentRenderingFramework_v0_1_2-102) ==== 

Jiras:
* CRF-70: Fixed include order for Javascript packages.

==== Version 0.1.2-101 (tag: contentRenderingFramework_v0_1_2-101) ==== 

Jiras:
* CRF-65: Change 'resources' to 'uiresources'

Additional Changes:
* Changed the Resource caching to use the Device user-agent as the key instead of Device name.
 
Upgrade Notes:
* The 'resources' directory (containing CSS, images, Javascript) should be renamed to 'uiresources'.  

    
==== Version 0.1.2-100 (tag: contentRenderingFramework_v0_1_2-100) ==== 

Jiras:
* CRF-13: ResourceResolverEngineBean caching 
* CRF-62: NEW: modify crf:script to make JS files override inherited files with the same name
* CRF-67: NEW: properties file resolution

Upgrade Notes:
* JavaScript inheritance: previously, files with the same name will be included from later groups.
  This will no longer occur. eg. if a device matches both the apple and iphone groups and they
  both have a map.js file:
  
      iphone/comp/map/map.js
      apple/comp/map/map.js
      
  only iphone/comp/map/map.js will be resolved (ie. the most specific file).  
  Beware of this in case you were relying on the previous behaviour.
* The standard crf-environment.properties.* files now define the "env.cache.resources" property
  with a sensible default value for each environment. You may override this if you wish
  by defining the property in a crf-environment.properties.* file in your classpath root.

==== Version 0.1.2-004 (tag: contentRenderingFramework_v0_1_2-004, branch: branch_contentRenderingFramework_v0_1_2-002) ==== 

Jiras:
* CRF-68: NEW: crf:img should output body content if the source image is not found

==== Version 0.1.2-003 (tag: contentRenderingFramework_v0_1_2-003, branch: branch_contentRenderingFramework_v0_1_2-002) ==== 

Released from branch branch_contentRenderingFramework_v0_1_2-002. 

Jiras:
* CRF-72 NEW - {{crf:img}}, {{crf:link}} and {{crf:script}} should not write a "\n" character to response 

==== Version 0.1.2-002 (tag: contentRenderingFramework_v0_1_2-002) ==== 

Jiras:
* CRF-67 NEW: properties file resolution
    * Added au.com.sensis.mobile.crf.service.PropertiesLoader and PropertiesLoaderBean 
      implementation.
    * Added PropertiesResourceResolverBean and wired up DelegatingResourceResolverBean in 
      crfContext.xml to include this. 
    * crf.propertiesLoader bean now exposed in crfContext.xml so that apps can use it if required. 
    
Upgrade notes:
* Any webapp that uses crf now requires an extra property in crf-environment.properties.*. The 
  following example is for a desktop environment:
    * env.resources.properties.root.dir=D:/Software/apache-tomcat-hotdeploy/webapps/wl-map-component-showcase/WEB-INF/properties    

==== Version 0.1.2-001 (tag: contentRenderingFramework_v0_1_2-001) ==== 

Removed dependency:
    <dependency org="com.sensis" name="ems-cxf-client" rev="1.6" conf="showcase->default"/>

==== Version 0.1.2 (tag: contentRenderingFramework_v0_1_2) ==== 

Closing off iteration 0.1.2. Jira issues:
** Improvement
    * [CRF-55] - Change "href" attribute of crf:image and crf:script tag to "src"

** Task
    * [CRF-12] - Support multiple, independent crf-config.xml files
    * [CRF-35] - Deploy CRF Showcase to Dev
    * [CRF-38] - Perf Testing: Create CRF test pages 
    * [CRF-39] - Perf Testing: Create MCS test pages 
    * [CRF-40] - Perf Testing: Create static HTML pages
    * [CRF-42] - NEW: ContentRenderingPlatformConfigurationFactory - allow runtime reloading of crp-config.xml
    * [CRF-43] - NEW: Version numbers in JavaScript, image and CSS paths
    * [CRF-49] - NEW: remove dependency on wl-core-component
    * [CRF-57] - Perf Testing: Setup and Run Performance Tests
    * [CRF-58] - NEW: Move PathPrefixRestrictedResourceResolverEngineBean, DelegatingPathRestrictedResourceResolverEngineBean 
      capabilities into ConfigurationFactoryBean
    * [CRF-59] - NEW: crf:deviceProperty tag
    * [CRF-60] - NEW: modify crf:script tag to support scripts in body content
    * [CRF-61] - NEW: modify crf:script tag to support absolute (http://) URLs

==== Version 0.1.1-006 (tag: contentRenderingFramework_v0_1_1-006) ==== 

Jiras:
- CRF-38 Perf Testing: Create CRF test pages 
- CRF-39 Perf Testing: Create MCS test pages 
- CRF-40 Perf Testing: Create static HTML pages 
- CRF-12 Support multiple, independent crf-config.xml files
    -  additional fix for this reopened Jira. Given a group config file with a config path 
       of "component/map", JSP URLs like "../../../selenium/component/map/map.crf" will now be 
       correctly resolved. ie. UiConfiguration.appliesToPath now uses String.contains instead of 
       String.startsWith. Also fixed URL in map.css which was broken from previous commits 
       (can't easily assert for this in the selenium tests, I think).

==== Version 0.1.1-005 (tag: contentRenderingFramework_v0_1_1-005) ==== 

Added crf-environment.properties.sandpit-uidev.

==== Version 0.1.1-004 (tag: contentRenderingFramework_v0_1_1-004) ==== 

Jiras:
* [CRF-60] - NEW: modify crf:script tag to support scripts in body content
* [CRF-61] -  NEW: modify crf:script tag to support absolute (http://) URLs

==== Version 0.1.1-003 (tag: contentRenderingFramework_v0_1_1-003) ==== 

crf.properties updated so that all XML resources under /WEB-INF/crf-config will be picked up
by the engine:
  
resources.config.path.patterns=/WEB-INF/crf-config/**/*.xml

==== Version 0.1.1-002 (tag: contentRenderingFramework_v0_1_1-002) ==== 

Jiras:
* [CRF-59] - NEW: crf:deviceProperty tag

==== Version 0.1.1-001 (tag: contentRenderingFramework_v0_1_1-001) ==== 

Jiras:
* [CRF-55] - Change "href" attribute of crf:image and crf:script tag to "src"
* [CRF-4] - EIS Engagement for Content Rendering Framework requirements
* [CRF-38] - Perf Testing: Create CRF test pages 
* [CRF-39] - Perf Testing: Create MCS test pages 
* [CRF-40] - Perf Testing: Create static HTML pages
* [CRF-42] - NEW: ContentRenderingPlatformConfigurationFactory - allow runtime reloading of crp-config.xml
* [CRF-43] - NEW: Version numbers in JavaScript, image and CSS paths
* [CRF-49] - NEW: remove dependency on wl-core-component
* [CRF-57] - Perf Testing: Setup and Run Performance Tests
* [CRF-58] - NEW: Move PathPrefixRestrictedResourceResolverEngineBean, DelegatingPathRestrictedResourceResolverEngineBean 
             capabilities into ConfigurationFactoryBean

Upgrade notes:
- The core component needs to remove the following bean definition from coreComponentPropertiesContext.xml 
  as this is now provided by crf:

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="placeholderPrefix" value="@{global."/>
        
        <!-- 
          - Ensure that this PropertyPlaceholderConfigurer is applied before any other PropertyPlaceholderConfigurer.
          - Particularly important for the following scenario:
          - 1. A PropertiesFactoryBean is configured to load a platform specific properties file 
          -    (ie. the file name is parameterised by the @{global.platform} placeholder.
          - 2. Another PropertyPlaceholderConfigurer depends on the aforementioned properties file. 
          -->
        <property name="order" value="0" />
        
        <property name="location">
            <!--
              - Load the host application's gloabl-version.properties so that we have access to the 
              - build version information. 
              -->
            <value>classpath:/global-version.properties</value>
        </property>
    </bean>


==== Version 0.1.1 (tag: contentRenderingFramework_v0_1_1) ==== 

Closing off iteration 0.1.1. Jira issues:
* [CRF-1] - Dir structure and build scripts
* [CRF-2] - ContentRenderingPlatformConfigurationFactory
* [CRF-7] - Basic file selection: stop at first found (used for JSP resolution)
* [CRF-8] - Advanced file selection: find all matches for specific file + extension (used for CSS resolution)
* [CRF-9] - Advanced file selection: find all matches for list of {specific file basename + set of acceptable extensions} and return first  (used for Images)
* [CRF-10] - Find *.<type> in each group but order of files in each group controlled by bundles.properties (Used for JavaScript resolution)
* [CRF-12] - Support multiple, independent crf-config.xml files
* [CRF-16] - ContentRenderingPlatformServlet
* [CRF-20] - crf:link CSS tag - no bundling
* [CRF-23] - crf:image JSP tag - basic file look up
* [CRF-27] - ImageServlet
* [CRF-30] - crf:script tag - [name].js - no bundling
* [CRF-31] - crf:script tag - *.js - no bundling
* [CRF-37] - CVS module creation (inc. crp migration to crf)
* [CRF-44] - NEW: JSP Resolution - showcase selenium test
* [CRF-46] - NEW: CSS Resolution - showcase selenium test
* [CRF-47] - NEW: crf:link and crf:script tags - ensure no duplicates output
* [CRF-51] - NEW: Image Resolution - showcase selenium test
* [CRF-52] - NEW: selenium tests - update to spoof user agents
* [CRF-56] - NEW: Refactor ResourceSelectorBean, ResourcePathMapper and MappedResourcePath responsibilities
 
==== Version 0.0.3 (tag: contentRenderingFramework_v0_0_3) ==== 

Tagging initial commit under contentRenderingFramework. This was copied from the previous, temporary CVS
home of mcs/crp.

Code base should be ready for component integration (albeit possibly with a few rough edges). 
Basic JavaScript resolution now works (<name>.js and *.js forms but with no bundling).

==== Version 0.0.2 (tag: crp_v0_0_2) (in old mcs/crp CVS home) ==== 

JSP resolution, basic CSS and basic image resolution done (except for img tag width and height output).

==== Version 0.0.1 (tag: crp_v0_0_1) (in old mcs/crp CVS home) ==== 

JSP routing via (configurable) .crp extension implemented. Show case demonstrates JSP routing
via both forwards and includes.